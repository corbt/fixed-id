import "hashes/sha256/512bitPadded" as sha256

struct MerkleProofStep {
  bool isRightNode
  u32[8] otherDigest
}

def verifyMerkleProof<Depth>(u32[8] rootDigest, u32[8] leafDigest, MerkleProofStep[Depth] merkleProof) -> bool:
  u32[8] currentDigest = leafDigest

  for u32 i in 0..Depth do
    MerkleProofStep currentStep = merkleProof[i]

    u32[8] lhs = if currentStep.isRightNode then currentStep.otherDigest else currentDigest fi
    u32[8] rhs = if currentStep.isRightNode then currentDigest else currentStep.otherDigest fi
    currentDigest = sha256(lhs, rhs)
  endfor

  return rootDigest == currentDigest

def main(u32[8] rootDigest, u32[8] leafDigest, MerkleProofStep[2] merkleProof):
  assert(verifyMerkleProof(rootDigest, leafDigest, merkleProof))

  return
