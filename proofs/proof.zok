import "hashes/poseidon/poseidon" as poseidon

struct MerkleProofStep {
  bool isRightNode
  field otherDigest
}

def verifyMerkleProof<Depth>(field rootDigest, field leafDigest, MerkleProofStep[Depth] merkleProof) -> bool:
  field currentDigest = leafDigest

  for u32 i in 0..Depth do
    MerkleProofStep currentStep = merkleProof[i]

    field lhs = if currentStep.isRightNode then currentStep.otherDigest else currentDigest fi
    field rhs = if currentStep.isRightNode then currentDigest else currentStep.otherDigest fi
    currentDigest = poseidon([lhs, rhs])
  endfor

  assert(currentDigest == rootDigest)
  return true

def main(field rootDigest, field leafDigest, private MerkleProofStep[2] merkleProof):
  assert(verifyMerkleProof(rootDigest, leafDigest, merkleProof))
  return
